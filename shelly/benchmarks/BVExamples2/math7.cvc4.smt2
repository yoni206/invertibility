
(set-option :produce-models true)
(declare-fun certora_ct1_1 () (_ BitVec 256))
(declare-fun a_0 () (_ BitVec 256))
(declare-fun certora_ct2_1 () (_ BitVec 256))
(declare-fun b_0 () (_ BitVec 256))
(declare-fun certoraDummy1_1 () Bool)
(declare-fun certoraDummy1_2 () Bool)
(declare-fun certoraDummy2_1 () (_ BitVec 256))
(declare-fun certoraDummy2_2 () (_ BitVec 256))
(declare-fun certoraDummy2_3 () Bool)
(declare-fun certoraDummy2_4 () Bool)
(declare-fun certoraDummy1_3 () Bool)
(declare-fun lastAssignmentOverflown_2 () Bool)
(declare-fun certora_certoraAssumet1_1 () (_ BitVec 256))
(declare-fun certoraAssume_1 () Bool)
(declare-fun certoraAssume_2 () (_ BitVec 256))
(declare-fun lastOverflow_1 () Bool)
(declare-fun certora_certoraAssert_0t_1 () Bool)
(declare-fun certoraAssert_0_1 () Bool)
(declare-fun OK_0_0_0_0_0_0_0 () Bool)

(assert (not (=> (= OK_0_0_0_0_0_0_0 (=> (= certora_ct1_1 a_0) (=> (= certora_ct2_1 b_0) (=> (= certoraDummy1_1 (= certora_ct2_1 (_ bv0 256))) (=> (= certoraDummy1_2 (not certoraDummy1_1)) (=> (= certoraDummy2_1 (bvmul certora_ct1_1 certora_ct2_1)) (=> (= certoraDummy2_2 (bvudiv certoraDummy2_1 certora_ct2_1)) (=> (= certoraDummy2_3 (= certoraDummy2_2 certora_ct1_1)) (=> (= certoraDummy2_4 (not certoraDummy2_3)) (=> (= certoraDummy1_3 (and certoraDummy1_2 certoraDummy2_4)) (=> (= lastAssignmentOverflown_2 (or false certoraDummy1_3)) (=> (= certora_certoraAssumet1_1 b_0) (=> (= certoraAssume_1 (= certora_certoraAssumet1_1 (_ bv0 256))) (=> certoraAssume_1 (=> (= certoraAssume_2 (_ bv1 256)) (=> (not (= certoraAssume_2 (_ bv0 256))) (=> (= lastOverflow_1 lastAssignmentOverflown_2) (=> (= certora_certoraAssert_0t_1 lastOverflow_1) (=> (= certoraAssert_0_1 (not certora_certoraAssert_0t_1)) (and certoraAssert_0_1 true)))))))))))))))))))) OK_0_0_0_0_0_0_0)))
(check-sat)
(get-model)
