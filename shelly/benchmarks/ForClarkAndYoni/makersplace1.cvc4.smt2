
(set-option :produce-models true)
(declare-fun interL1014@2_1_1 () (_ BitVec 256))
(declare-fun L1014@2_1 () (_ BitVec 256))
(declare-fun certoraTmp_1 () (_ BitVec 256))
(declare-fun caller_0 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_1 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_2 () Bool)
(declare-fun certoraTmp_2 () Bool)
(declare-fun e.msg.sender_0 () (_ BitVec 256))
(declare-fun certoraTmp_3 () (_ BitVec 256))
(declare-fun callvalue_0 () (_ BitVec 256))
(declare-fun certoraTmp_4 () Bool)
(declare-fun e.msg.value_0 () (_ BitVec 256))
(declare-fun certoraTmp_5 () (_ BitVec 256))
(declare-fun address_0 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_3 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_4 () Bool)
(declare-fun certoraTmp_6 () Bool)
(declare-fun e.msg.address_0 () (_ BitVec 256))
(declare-fun certoraTmp_7 () (_ BitVec 256))
(declare-fun origin_0 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_5 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_6 () Bool)
(declare-fun certoraTmp_8 () Bool)
(declare-fun e.tx.origin_0 () (_ BitVec 256))
(declare-fun certoraTmp_9 () (_ BitVec 256))
(declare-fun blockNumber_0 () (_ BitVec 256))
(declare-fun certoraTmp_10 () Bool)
(declare-fun e.block.number_0 () (_ BitVec 256))
(declare-fun sizeCalldata_1 () (_ BitVec 256))
(declare-fun calldatasize_0 () (_ BitVec 256))
(declare-fun tmpSizeCalldataLimitCheck_1 () Bool)
(declare-fun lastStorage_1 () (Array (_ BitVec 256) (Array (_ BitVec 256) (_ BitVec 256))))
(declare-fun S_0 () (Array (_ BitVec 256) (Array (_ BitVec 256) (_ BitVec 256))))
(declare-fun lastHasThrown_2 () Bool)
(declare-fun certoraTmp_11 () (_ BitVec 256))
(declare-fun caller@1_0 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_7 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_8 () Bool)
(declare-fun certoraTmp_12 () Bool)
(declare-fun certoraTmp_13 () (_ BitVec 256))
(declare-fun callvalue@1_0 () (_ BitVec 256))
(declare-fun certoraTmp_14 () Bool)
(declare-fun certoraTmp_15 () (_ BitVec 256))
(declare-fun address@1_0 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_9 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_10 () Bool)
(declare-fun certoraTmp_16 () Bool)
(declare-fun certoraTmp_17 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_11 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_12 () Bool)
(declare-fun certoraTmp_18 () Bool)
(declare-fun certoraTmp_19 () (_ BitVec 256))
(declare-fun blockNumber@1_0 () (_ BitVec 256))
(declare-fun certoraTmp_20 () Bool)
(declare-fun sizeCalldata_2 () (_ BitVec 256))
(declare-fun calldatasize@1_0 () (_ BitVec 256))
(declare-fun tmpSizeCalldataLimitCheck_2 () Bool)
(declare-fun S_1 () (Array (_ BitVec 256) (Array (_ BitVec 256) (_ BitVec 256))))
(declare-fun certoraInput_1 () (_ BitVec 256))
(declare-fun calldata@1_0 () (Array (_ BitVec 256) (_ BitVec 8)))
(declare-fun certoraInput_2 () (_ BitVec 256))
(declare-fun certoraIsMethod_1 () Bool)
(declare-fun thisAddressTmp_1 () (_ BitVec 256))
(declare-fun thisAddressTmpBool_1 () Bool)
(declare-fun origS_1 () (Array (_ BitVec 256) (Array (_ BitVec 256) (_ BitVec 256))))
(declare-fun tmp@1_1 () (_ BitVec 256))
(declare-fun maskedTmp@1_1 () (_ BitVec 256))
(declare-fun maskedTmp@1_2 () Bool)
(declare-fun tmp@1_2 () (_ BitVec 256))
(declare-fun maskedTmp@1_3 () (_ BitVec 256))
(declare-fun maskedTmp@1_4 () Bool)
(declare-fun M@1_1 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun M@1_0 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun L1023@1_2 () (_ BitVec 256))
(declare-fun L1022@1_1 () Bool)
(declare-fun S_2 () (Array (_ BitVec 256) (Array (_ BitVec 256) (_ BitVec 256))))
(declare-fun lastReverted_1 () Bool)
(declare-fun L1020@1_1 () (_ BitVec 256))
(declare-fun L1023@1_4 () (_ BitVec 256))
(declare-fun M@1_2 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun L1021@1_1 () (_ BitVec 256))
(declare-fun L0@1_1 () (_ BitVec 256))
(declare-fun L1022@1_5 () (_ BitVec 256))
(declare-fun L1023@1_6 () (_ BitVec 256))
(declare-fun retVal@1_1 () (_ BitVec 256))
(declare-fun lastReverted_2 () Bool)
(declare-fun certoraOutVar0_2 () (_ BitVec 256))
(declare-fun certoraMemOffset_2 () (_ BitVec 256))
(declare-fun myTotalSupply_1 () (_ BitVec 256))
(declare-fun certoraOutVar0_3 () (_ BitVec 256))
(declare-fun lastReverted_3 () Bool)
(declare-fun lastStorage_2 () (Array (_ BitVec 256) (Array (_ BitVec 256) (_ BitVec 256))))
(declare-fun S_3 () (Array (_ BitVec 256) (Array (_ BitVec 256) (_ BitVec 256))))
(declare-fun certoraAssumeL2_1 () (_ BitVec 256))
(declare-fun certoraAssumeL3_1 () (_ BitVec 256))
(declare-fun myPrintIndex_0 () (_ BitVec 256))
(declare-fun certoraArg0_1 () (_ BitVec 256))
(declare-fun digitalMediaId_0 () (_ BitVec 256))
(declare-fun lastHasThrown_3 () Bool)
(declare-fun certoraTmp_21 () (_ BitVec 256))
(declare-fun caller@2_0 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_13 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_14 () Bool)
(declare-fun certoraTmp_22 () Bool)
(declare-fun certoraTmp_23 () (_ BitVec 256))
(declare-fun callvalue@2_0 () (_ BitVec 256))
(declare-fun certoraTmp_24 () Bool)
(declare-fun certoraTmp_25 () (_ BitVec 256))
(declare-fun address@2_0 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_15 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_16 () Bool)
(declare-fun certoraTmp_26 () Bool)
(declare-fun certoraTmp_27 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_17 () (_ BitVec 256))
(declare-fun certoraMaskedTmp_18 () Bool)
(declare-fun certoraTmp_28 () Bool)
(declare-fun certoraTmp_29 () (_ BitVec 256))
(declare-fun blockNumber@2_0 () (_ BitVec 256))
(declare-fun certoraTmp_30 () Bool)
(declare-fun sizeCalldata_3 () (_ BitVec 256))
(declare-fun calldatasize@2_0 () (_ BitVec 256))
(declare-fun tmpSizeCalldataLimitCheck_3 () Bool)
(declare-fun S_4 () (Array (_ BitVec 256) (Array (_ BitVec 256) (_ BitVec 256))))
(declare-fun certoraInput_3 () (_ BitVec 256))
(declare-fun calldata@2_0 () (Array (_ BitVec 256) (_ BitVec 8)))
(declare-fun certoraInput_4 () (_ BitVec 256))
(declare-fun certoraIsMethod_2 () Bool)
(declare-fun certoraParam0_1 () (_ BitVec 256))
(declare-fun certoraEqParam_1 () Bool)
(declare-fun thisAddressTmp_2 () (_ BitVec 256))
(declare-fun thisAddressTmpBool_2 () Bool)
(declare-fun origS_2 () (Array (_ BitVec 256) (Array (_ BitVec 256) (_ BitVec 256))))
(declare-fun tmp@2_1 () (_ BitVec 256))
(declare-fun maskedTmp@2_1 () (_ BitVec 256))
(declare-fun maskedTmp@2_2 () Bool)
(declare-fun tmp@2_2 () (_ BitVec 256))
(declare-fun maskedTmp@2_3 () (_ BitVec 256))
(declare-fun maskedTmp@2_4 () Bool)
(declare-fun M@2_1 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun M@2_0 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun L1023@2_2 () (_ BitVec 256))
(declare-fun L1022@2_1 () Bool)
(declare-fun S_5 () (Array (_ BitVec 256) (Array (_ BitVec 256) (_ BitVec 256))))
(declare-fun lastReverted_4 () Bool)
(declare-fun sizeCalldata@2_1 () (_ BitVec 256))
(declare-fun tmpSizeCalldataLimitCheck@2_1 () Bool)
(declare-fun boundaryCalldata@2_1 () Bool)
(declare-fun L1019@2_1 () (_ BitVec 256))
(declare-fun L1022@2_2 () (_ BitVec 256))
(declare-fun M@2_2 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun M@2_3 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun L1015@2_1 () (_ BitVec 256))
(declare-fun L1021@2_3 () (_ BitVec 256))
(declare-fun L1014@2_2 () (_ BitVec 256))
(declare-fun L1013@2_1 () (_ BitVec 256))
(declare-fun L1013@2_2 () (_ BitVec 256))
(declare-fun L1014@2_3 () (_ BitVec 256))
(declare-fun L1014@2_4 () (_ BitVec 256))
(declare-fun L1014@2_5 () (_ BitVec 256))
(declare-fun L1020@2_2 () (_ BitVec 256))
(declare-fun L1014@2_6 () (_ BitVec 256))
(declare-fun L1013@2_3 () (_ BitVec 256))
(declare-fun L1013@2_4 () (_ BitVec 256))
(declare-fun L1014@2_7 () (_ BitVec 256))
(declare-fun L1014@2_8 () (_ BitVec 256))
(declare-fun L1014@2_9 () (_ BitVec 256))
(declare-fun L1019@2_2 () (_ BitVec 256))
(declare-fun L1014@2_10 () (_ BitVec 256))
(declare-fun L1014@2_11 () (_ BitVec 256))
(declare-fun L1018@2_1 () (_ BitVec 256))
(declare-fun L1014@2_12 () (_ BitVec 256))
(declare-fun L1013@2_5 () (_ BitVec 256))
(declare-fun L1013@2_6 () (_ BitVec 256))
(declare-fun L1014@2_13 () (_ BitVec 256))
(declare-fun L1014@2_14 () (_ BitVec 256))
(declare-fun L1016@2_1 () (_ BitVec 256))
(declare-fun L1018@2_2 () (_ BitVec 256))
(declare-fun L0@2_1 () (_ BitVec 256))
(declare-fun L1016@2_2 () (_ BitVec 256))
(declare-fun L1020@2_3 () (_ BitVec 256))
(declare-fun L1022@2_3 () (_ BitVec 256))
(declare-fun L1017@2_1 () (_ BitVec 256))
(declare-fun L1019@2_3 () (_ BitVec 256))
(declare-fun L0@2_2 () (_ BitVec 256))
(declare-fun L1017@2_2 () (_ BitVec 256))
(declare-fun L1021@2_4 () (_ BitVec 256))
(declare-fun L1023@2_4 () (_ BitVec 256))
(declare-fun L1017@2_3 () (_ BitVec 256))
(declare-fun M@2_4 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun M@2_5 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun M@2_6 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun M@2_7 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun L1015@2_2 () (_ BitVec 256))
(declare-fun L1015@2_3 () (_ BitVec 256))
(declare-fun L1015@2_4 () (_ BitVec 256))
(declare-fun M@2_8 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun L1016@2_7 () (_ BitVec 256))
(declare-fun M@2_9 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun L1012@2_1 () (_ BitVec 256))
(declare-fun M@2_10 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun L1013@2_8 () (_ BitVec 256))
(declare-fun L1012@2_2 () (_ BitVec 256))
(declare-fun L1011@2_1 () (_ BitVec 256))
(declare-fun L1010@2_1 () (_ BitVec 256))
(declare-fun L1009@2_1 () (_ BitVec 256))
(declare-fun L1008@2_1 () Bool)
(declare-fun L1008@2_2 () Bool)
(declare-fun L1008@2_3 () (_ BitVec 256))
(declare-fun L1007@2_1 () (_ BitVec 256))
(declare-fun M@2_11 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun L1009@2_2 () (_ BitVec 256))
(declare-fun L1008@2_4 () Bool)
(declare-fun L1008@2_5 () Bool)
(declare-fun t@2_1 () Bool)
(declare-fun lastHasThrown_4 () Bool)
(declare-fun L1014@2_17 () (_ BitVec 256))
(declare-fun L0@2_3 () (_ BitVec 256))
(declare-fun L1014@2_18 () (_ BitVec 256))
(declare-fun L1015@2_7 () (_ BitVec 256))
(declare-fun L1014@2_19 () (_ BitVec 256))
(declare-fun L1013@2_9 () Bool)
(declare-fun L1013@2_10 () (_ BitVec 256))
(declare-fun L1012@2_3 () (_ BitVec 256))
(declare-fun offsetFrom32_1 () (_ BitVec 256))
(declare-fun offsetFrom32_2 () (_ BitVec 256))
(declare-fun offsetFrom32Completion_1 () (_ BitVec 256))
(declare-fun firstCell_1 () (_ BitVec 256))
(declare-fun firstCell_2 () (_ BitVec 256))
(declare-fun secondCell_1 () (_ BitVec 256))
(declare-fun mload1_1 () (_ BitVec 256))
(declare-fun M@2_12 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun mload2_1 () (_ BitVec 256))
(declare-fun p2mload1_1 () (_ BitVec 256))
(declare-fun p1mload2_1 () (_ BitVec 256))
(declare-fun L1012@2_4 () (_ BitVec 256))
(declare-fun L1011@2_2 () (_ BitVec 256))
(declare-fun L1010@2_3 () (_ BitVec 256))
(declare-fun L1011@2_3 () (_ BitVec 256))
(declare-fun L1012@2_5 () (_ BitVec 256))
(declare-fun offsetFrom32_3 () (_ BitVec 256))
(declare-fun offsetFrom32Bits_1 () (_ BitVec 256))
(declare-fun offsetFrom32Completion_2 () (_ BitVec 256))
(declare-fun firstCell_3 () (_ BitVec 256))
(declare-fun secondCell_2 () (_ BitVec 256))
(declare-fun mload1_2 () (_ BitVec 256))
(declare-fun mload2_2 () (_ BitVec 256))
(declare-fun maskOfSecond_1 () (_ BitVec 256))
(declare-fun maskOfSecond_2 () (_ BitVec 256))
(declare-fun maskOfSecond_3 () (_ BitVec 256))
(declare-fun maskOfFirst_1 () (_ BitVec 256))
(declare-fun p1mload1_1 () (_ BitVec 256))
(declare-fun p2mload2_1 () (_ BitVec 256))
(declare-fun p1rhs_1 () (_ BitVec 256))
(declare-fun p2rhs_1 () (_ BitVec 256))
(declare-fun p1mload1new_1 () (_ BitVec 256))
(declare-fun mload1new_1 () (_ BitVec 256))
(declare-fun p2mload1new_1 () (_ BitVec 256))
(declare-fun p1mload2new_1 () (_ BitVec 256))
(declare-fun mload2new_1 () (_ BitVec 256))
(declare-fun p2mload2new_1 () (_ BitVec 256))
(declare-fun assume1_1 () Bool)
(declare-fun assume2_1 () Bool)
(declare-fun assume3_1 () Bool)
(declare-fun assume4_1 () Bool)
(declare-fun M@2_13 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun M@2_14 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun L1013@2_11 () (_ BitVec 256))
(declare-fun L1015@2_8 () (_ BitVec 256))
(declare-fun L1022@2_4 () (_ BitVec 256))
(declare-fun M@2_15 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun L1023@2_5 () (_ BitVec 256))
(declare-fun L1022@2_5 () (_ BitVec 256))
(declare-fun L1015@2_9 () (_ BitVec 256))
(declare-fun L0@2_4 () (_ BitVec 256))
(declare-fun L1022@2_6 () (_ BitVec 256))
(declare-fun L1023@2_6 () (_ BitVec 256))
(declare-fun offsetFrom32_5 () (_ BitVec 256))
(declare-fun offsetFrom32_6 () (_ BitVec 256))
(declare-fun offsetFrom32Completion_4 () (_ BitVec 256))
(declare-fun firstCell_5 () (_ BitVec 256))
(declare-fun firstCell_6 () (_ BitVec 256))
(declare-fun secondCell_4 () (_ BitVec 256))
(declare-fun mload1_4 () (_ BitVec 256))
(declare-fun mload2_4 () (_ BitVec 256))
(declare-fun p2mload1_3 () (_ BitVec 256))
(declare-fun p1mload2_3 () (_ BitVec 256))
(declare-fun retVal@2_1 () (_ BitVec 256))
(declare-fun lastReverted_5 () Bool)
(declare-fun certoraMemOffset_4 () (_ BitVec 256))
(declare-fun offsetFrom32_7 () (_ BitVec 256))
(declare-fun offsetFrom32_8 () (_ BitVec 256))
(declare-fun offsetFrom32Completion_5 () (_ BitVec 256))
(declare-fun firstCell_7 () (_ BitVec 256))
(declare-fun firstCell_8 () (_ BitVec 256))
(declare-fun secondCell_5 () (_ BitVec 256))
(declare-fun mload1_5 () (_ BitVec 256))
(declare-fun mload2_5 () (_ BitVec 256))
(declare-fun p2mload1_4 () (_ BitVec 256))
(declare-fun p1mload2_4 () (_ BitVec 256))
(declare-fun certoraOutVar0_5 () (_ BitVec 256))
(declare-fun certoraMemOffset_5 () (_ BitVec 256))
(declare-fun offsetFrom32_9 () (_ BitVec 256))
(declare-fun offsetFrom32_10 () (_ BitVec 256))
(declare-fun offsetFrom32Completion_6 () (_ BitVec 256))
(declare-fun firstCell_9 () (_ BitVec 256))
(declare-fun firstCell_10 () (_ BitVec 256))
(declare-fun secondCell_6 () (_ BitVec 256))
(declare-fun mload1_6 () (_ BitVec 256))
(declare-fun mload2_6 () (_ BitVec 256))
(declare-fun p2mload1_5 () (_ BitVec 256))
(declare-fun p1mload2_5 () (_ BitVec 256))
(declare-fun certoraOutVar1_2 () (_ BitVec 256))
(declare-fun certoraMemOffset_6 () (_ BitVec 256))
(declare-fun offsetFrom32_11 () (_ BitVec 256))
(declare-fun offsetFrom32_12 () (_ BitVec 256))
(declare-fun offsetFrom32Completion_7 () (_ BitVec 256))
(declare-fun firstCell_11 () (_ BitVec 256))
(declare-fun firstCell_12 () (_ BitVec 256))
(declare-fun secondCell_7 () (_ BitVec 256))
(declare-fun mload1_7 () (_ BitVec 256))
(declare-fun mload2_7 () (_ BitVec 256))
(declare-fun p2mload1_6 () (_ BitVec 256))
(declare-fun p1mload2_6 () (_ BitVec 256))
(declare-fun certoraOutVar2_2 () (_ BitVec 256))
(declare-fun certoraMemOffset_7 () (_ BitVec 256))
(declare-fun offsetFrom32_13 () (_ BitVec 256))
(declare-fun offsetFrom32_14 () (_ BitVec 256))
(declare-fun offsetFrom32Completion_8 () (_ BitVec 256))
(declare-fun firstCell_13 () (_ BitVec 256))
(declare-fun firstCell_14 () (_ BitVec 256))
(declare-fun secondCell_8 () (_ BitVec 256))
(declare-fun mload1_8 () (_ BitVec 256))
(declare-fun mload2_8 () (_ BitVec 256))
(declare-fun p2mload1_7 () (_ BitVec 256))
(declare-fun p1mload2_7 () (_ BitVec 256))
(declare-fun certoraOutVar3_2 () (_ BitVec 256))
(declare-fun certoraMemOffset_8 () (_ BitVec 256))
(declare-fun offsetFrom32_15 () (_ BitVec 256))
(declare-fun offsetFrom32_16 () (_ BitVec 256))
(declare-fun offsetFrom32Completion_9 () (_ BitVec 256))
(declare-fun firstCell_15 () (_ BitVec 256))
(declare-fun firstCell_16 () (_ BitVec 256))
(declare-fun secondCell_9 () (_ BitVec 256))
(declare-fun mload1_9 () (_ BitVec 256))
(declare-fun mload2_9 () (_ BitVec 256))
(declare-fun p2mload1_8 () (_ BitVec 256))
(declare-fun p1mload2_8 () (_ BitVec 256))
(declare-fun certoraOutVar4_2 () (_ BitVec 256))
(declare-fun certoraMemOffset_9 () (_ BitVec 256))
(declare-fun certoraAssumeR1_1 () (_ BitVec 256))
(declare-fun certoraOutVar0_6 () (_ BitVec 256))
(declare-fun certoraAssumeR2_1 () (_ BitVec 256))
(declare-fun certoraOutVar1_3 () (_ BitVec 256))
(declare-fun certoraAssumeR3_1 () (_ BitVec 256))
(declare-fun certoraOutVar2_3 () (_ BitVec 256))
(declare-fun certoraAssumeR4_1 () (_ BitVec 256))
(declare-fun certoraOutVar3_3 () (_ BitVec 256))
(declare-fun certoraAssumeR5_1 () (_ BitVec 256))
(declare-fun certoraOutVar4_3 () (_ BitVec 256))
(declare-fun certoraAssumeR6_1 () (_ BitVec 256))
(declare-fun certoraOutVar5_1 () (_ BitVec 256))
(declare-fun lastReverted_6 () Bool)
(declare-fun lastHasThrown_6 () Bool)
(declare-fun certoraAssume1_1 () Bool)
(declare-fun certoraAssumeL1_0 () (_ BitVec 256))
(declare-fun certoraAssume2_1 () Bool)
(declare-fun certoraAssume3_1 () Bool)
(declare-fun certoraAssume4_1 () Bool)
(declare-fun certoraAssumeL4_0 () (_ BitVec 256))
(declare-fun certoraAssume5_1 () Bool)
(declare-fun certoraAssumeL5_0 () (_ BitVec 256))
(declare-fun certoraAssume6_1 () Bool)
(declare-fun certoraAssumeL6_0 () (_ BitVec 256))
(declare-fun certoraAssume_1 () Bool)
(declare-fun certora_certoraAssert_0t1_1 () (_ BitVec 256))
(declare-fun certora_certoraAssert_0t2_1 () (_ BitVec 256))
(declare-fun certoraTStrict_1 () Bool)
(declare-fun certoraTEq_1 () Bool)
(declare-fun certoraAssert_0_1 () Bool)
(declare-fun certoraOutVar0_1 () (_ BitVec 256))
(declare-fun M@1_3 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun L1023@1_7 () (_ BitVec 256))
(declare-fun L1022@1_6 () (_ BitVec 256))
(declare-fun L1020@1_2 () (_ BitVec 256))
(declare-fun L1020@1_0 () (_ BitVec 256))
(declare-fun L1021@1_2 () (_ BitVec 256))
(declare-fun L1021@1_0 () (_ BitVec 256))
(declare-fun L0@1_2 () (_ BitVec 256))
(declare-fun L0@1_0 () (_ BitVec 256))
(declare-fun retVal@1_2 () (_ BitVec 256))
(declare-fun retVal@1_0 () (_ BitVec 256))
(declare-fun certoraMemOffset_3 () (_ BitVec 256))
(declare-fun certoraMemOffset_0 () (_ BitVec 256))
(declare-fun S_6 () (Array (_ BitVec 256) (Array (_ BitVec 256) (_ BitVec 256))))
(declare-fun certoraOutVar0_4 () (_ BitVec 256))
(declare-fun certoraMemOffset_10 () (_ BitVec 256))
(declare-fun certoraOutVar1_1 () (_ BitVec 256))
(declare-fun certoraOutVar2_1 () (_ BitVec 256))
(declare-fun certoraOutVar3_1 () (_ BitVec 256))
(declare-fun certoraOutVar4_1 () (_ BitVec 256))
(declare-fun M@2_16 () (Array (_ BitVec 256) (_ BitVec 256)))
(declare-fun L1023@2_7 () (_ BitVec 256))
(declare-fun L1022@2_7 () (_ BitVec 256))
(declare-fun L1020@2_4 () (_ BitVec 256))
(declare-fun L1020@2_0 () (_ BitVec 256))
(declare-fun L1021@2_5 () (_ BitVec 256))
(declare-fun L1021@2_0 () (_ BitVec 256))
(declare-fun sizeCalldata@2_2 () (_ BitVec 256))
(declare-fun sizeCalldata@2_0 () (_ BitVec 256))
(declare-fun tmpSizeCalldataLimitCheck@2_2 () Bool)
(declare-fun tmpSizeCalldataLimitCheck@2_0 () Bool)
(declare-fun boundaryCalldata@2_2 () Bool)
(declare-fun boundaryCalldata@2_0 () Bool)
(declare-fun L1019@2_4 () (_ BitVec 256))
(declare-fun L1019@2_0 () (_ BitVec 256))
(declare-fun L1014@2_20 () (_ BitVec 256))
(declare-fun L1014@2_0 () (_ BitVec 256))
(declare-fun L1015@2_10 () (_ BitVec 256))
(declare-fun L1015@2_0 () (_ BitVec 256))
(declare-fun L1013@2_13 () (_ BitVec 256))
(declare-fun L1013@2_0 () (_ BitVec 256))
(declare-fun L1018@2_3 () (_ BitVec 256))
(declare-fun L1018@2_0 () (_ BitVec 256))
(declare-fun L1016@2_8 () (_ BitVec 256))
(declare-fun L1016@2_0 () (_ BitVec 256))
(declare-fun L0@2_5 () (_ BitVec 256))
(declare-fun L0@2_0 () (_ BitVec 256))
(declare-fun L1017@2_4 () (_ BitVec 256))
(declare-fun L1017@2_0 () (_ BitVec 256))
(declare-fun L1012@2_7 () (_ BitVec 256))
(declare-fun L1012@2_0 () (_ BitVec 256))
(declare-fun L1011@2_5 () (_ BitVec 256))
(declare-fun L1011@2_0 () (_ BitVec 256))
(declare-fun L1010@2_5 () (_ BitVec 256))
(declare-fun L1010@2_0 () (_ BitVec 256))
(declare-fun L1009@2_4 () (_ BitVec 256))
(declare-fun L1009@2_0 () (_ BitVec 256))
(declare-fun L1008@2_7 () Bool)
(declare-fun L1008@2_0 () Bool)
(declare-fun L1007@2_3 () (_ BitVec 256))
(declare-fun L1007@2_0 () (_ BitVec 256))
(declare-fun t@2_3 () Bool)
(declare-fun t@2_0 () Bool)
(declare-fun offsetFrom32_17 () (_ BitVec 256))
(declare-fun offsetFrom32_0 () (_ BitVec 256))
(declare-fun offsetFrom32Completion_10 () (_ BitVec 256))
(declare-fun offsetFrom32Completion_0 () (_ BitVec 256))
(declare-fun firstCell_17 () (_ BitVec 256))
(declare-fun firstCell_0 () (_ BitVec 256))
(declare-fun secondCell_10 () (_ BitVec 256))
(declare-fun secondCell_0 () (_ BitVec 256))
(declare-fun mload1_10 () (_ BitVec 256))
(declare-fun mload1_0 () (_ BitVec 256))
(declare-fun mload2_10 () (_ BitVec 256))
(declare-fun mload2_0 () (_ BitVec 256))
(declare-fun p2mload1_9 () (_ BitVec 256))
(declare-fun p2mload1_0 () (_ BitVec 256))
(declare-fun p1mload2_9 () (_ BitVec 256))
(declare-fun p1mload2_0 () (_ BitVec 256))
(declare-fun offsetFrom32Bits_3 () (_ BitVec 256))
(declare-fun offsetFrom32Bits_0 () (_ BitVec 256))
(declare-fun maskOfSecond_5 () (_ BitVec 256))
(declare-fun maskOfSecond_0 () (_ BitVec 256))
(declare-fun maskOfFirst_3 () (_ BitVec 256))
(declare-fun maskOfFirst_0 () (_ BitVec 256))
(declare-fun p1mload1_3 () (_ BitVec 256))
(declare-fun p1mload1_0 () (_ BitVec 256))
(declare-fun p2mload2_3 () (_ BitVec 256))
(declare-fun p2mload2_0 () (_ BitVec 256))
(declare-fun p1rhs_3 () (_ BitVec 256))
(declare-fun p1rhs_0 () (_ BitVec 256))
(declare-fun p2rhs_3 () (_ BitVec 256))
(declare-fun p2rhs_0 () (_ BitVec 256))
(declare-fun mload1new_3 () (_ BitVec 256))
(declare-fun mload1new_0 () (_ BitVec 256))
(declare-fun mload2new_3 () (_ BitVec 256))
(declare-fun mload2new_0 () (_ BitVec 256))
(declare-fun p1mload1new_3 () (_ BitVec 256))
(declare-fun p1mload1new_0 () (_ BitVec 256))
(declare-fun p2mload1new_3 () (_ BitVec 256))
(declare-fun p2mload1new_0 () (_ BitVec 256))
(declare-fun p1mload2new_3 () (_ BitVec 256))
(declare-fun p1mload2new_0 () (_ BitVec 256))
(declare-fun p2mload2new_3 () (_ BitVec 256))
(declare-fun p2mload2new_0 () (_ BitVec 256))
(declare-fun assume1_3 () Bool)
(declare-fun assume1_0 () Bool)
(declare-fun assume2_3 () Bool)
(declare-fun assume2_0 () Bool)
(declare-fun assume3_3 () Bool)
(declare-fun assume3_0 () Bool)
(declare-fun assume4_3 () Bool)
(declare-fun assume4_0 () Bool)
(declare-fun retVal@2_2 () (_ BitVec 256))
(declare-fun retVal@2_0 () (_ BitVec 256))
(declare-fun lastHasThrown_5 () Bool)
(declare-fun L1009@2_3 () (_ BitVec 256))
(declare-fun L1008@2_6 () Bool)
(declare-fun L1007@2_2 () (_ BitVec 256))
(declare-fun t@2_2 () Bool)
(declare-fun L1013@2_12 () (_ BitVec 256))
(declare-fun L1012@2_6 () (_ BitVec 256))
(declare-fun L1011@2_4 () (_ BitVec 256))
(declare-fun L1010@2_4 () (_ BitVec 256))
(declare-fun offsetFrom32_4 () (_ BitVec 256))
(declare-fun offsetFrom32Completion_3 () (_ BitVec 256))
(declare-fun firstCell_4 () (_ BitVec 256))
(declare-fun secondCell_3 () (_ BitVec 256))
(declare-fun mload1_3 () (_ BitVec 256))
(declare-fun mload2_3 () (_ BitVec 256))
(declare-fun p2mload1_2 () (_ BitVec 256))
(declare-fun p1mload2_2 () (_ BitVec 256))
(declare-fun offsetFrom32Bits_2 () (_ BitVec 256))
(declare-fun maskOfSecond_4 () (_ BitVec 256))
(declare-fun maskOfFirst_2 () (_ BitVec 256))
(declare-fun p1mload1_2 () (_ BitVec 256))
(declare-fun p2mload2_2 () (_ BitVec 256))
(declare-fun p1rhs_2 () (_ BitVec 256))
(declare-fun p2rhs_2 () (_ BitVec 256))
(declare-fun mload1new_2 () (_ BitVec 256))
(declare-fun mload2new_2 () (_ BitVec 256))
(declare-fun p1mload1new_2 () (_ BitVec 256))
(declare-fun p2mload1new_2 () (_ BitVec 256))
(declare-fun p1mload2new_2 () (_ BitVec 256))
(declare-fun p2mload2new_2 () (_ BitVec 256))
(declare-fun assume1_2 () Bool)
(declare-fun assume2_2 () Bool)
(declare-fun assume3_2 () Bool)
(declare-fun assume4_2 () Bool)
(declare-fun OK_0_0_0_0_0_0_0 () Bool)
(declare-fun OK_0_0_0_0_1_0_0 () Bool)
(declare-fun OK_1596_1023_0_0_1_0_0 () Bool)
(declare-fun OK_1592_1023_0_0_1_0_0 () Bool)
(declare-fun OK_2_0_0_0_0_0_0 () Bool)
(declare-fun OK_0_0_0_0_2_0_0 () Bool)
(declare-fun OK_2622_1023_0_0_2_0_0 () Bool)
(declare-fun OK_2618_1023_0_0_2_0_0 () Bool)
(declare-fun OK_12_0_0_0_0_0_0 () Bool)
(declare-fun OK_2791_1009_0_0_2_0_0 () Bool)
(declare-fun OK_2773_1009_0_10_2_0_0 () Bool)
(declare-fun OK_2836_1014_0_0_2_0_0 () Bool)
(declare-fun OK_2811_1014_0_0_2_0_0 () Bool)

(assert (not (=> (and (= OK_0_0_0_0_0_0_0 (=> (and (and (bvult interL1014@2_1_1 (_ bv131072 256)) (bvugt interL1014@2_1_1 (_ bv65536 256)) (= L1014@2_1 (bvmul interL1014@2_1_1 (_ bv8589934592 256))))) (=> (= certoraTmp_1 caller_0) (=> (= certoraMaskedTmp_1 (bvand certoraTmp_1 (_ bv115792089237316195423570985007226406215939081747436879206741300988257197096960 256))) (=> (= certoraMaskedTmp_2 (= certoraMaskedTmp_1 (_ bv0 256))) (=> certoraMaskedTmp_2 (=> (= certoraTmp_2 (= certoraTmp_1 e.msg.sender_0)) (=> certoraTmp_2 (=> (= certoraTmp_3 callvalue_0) (=> (= certoraTmp_4 (= certoraTmp_3 e.msg.value_0)) (=> certoraTmp_4 (=> (= certoraTmp_5 address_0) (=> (= certoraMaskedTmp_3 (bvand certoraTmp_5 (_ bv115792089237316195423570985007226406215939081747436879206741300988257197096960 256))) (=> (= certoraMaskedTmp_4 (= certoraMaskedTmp_3 (_ bv0 256))) (=> certoraMaskedTmp_4 (=> (= certoraTmp_6 (= certoraTmp_5 e.msg.address_0)) (=> certoraTmp_6 (=> (= certoraTmp_7 origin_0) (=> (= certoraMaskedTmp_5 (bvand certoraTmp_7 (_ bv115792089237316195423570985007226406215939081747436879206741300988257197096960 256))) (=> (= certoraMaskedTmp_6 (= certoraMaskedTmp_5 (_ bv0 256))) (=> certoraMaskedTmp_6 (=> (= certoraTmp_8 (= certoraTmp_7 e.tx.origin_0)) (=> certoraTmp_8 (=> (= certoraTmp_9 blockNumber_0) (=> (= certoraTmp_10 (= certoraTmp_9 e.block.number_0)) (=> certoraTmp_10 (=> (= sizeCalldata_1 calldatasize_0) (=> (= tmpSizeCalldataLimitCheck_1 (bvugt sizeCalldata_1 (_ bv100 256))) (=> tmpSizeCalldataLimitCheck_1 (=> (= lastStorage_1 S_0) OK_0_0_0_0_1_0_0)))))))))))))))))))))))))))))) (= OK_0_0_0_0_1_0_0 (=> (= lastHasThrown_2 false) (=> (= certoraTmp_11 caller@1_0) (=> (= certoraMaskedTmp_7 (bvand certoraTmp_11 (_ bv115792089237316195423570985007226406215939081747436879206741300988257197096960 256))) (=> (= certoraMaskedTmp_8 (= certoraMaskedTmp_7 (_ bv0 256))) (=> certoraMaskedTmp_8 (=> (= certoraTmp_12 (= certoraTmp_11 e.msg.sender_0)) (=> certoraTmp_12 (=> (= certoraTmp_13 callvalue@1_0) (=> (= certoraTmp_14 (= certoraTmp_13 e.msg.value_0)) (=> certoraTmp_14 (=> (= certoraTmp_15 address@1_0) (=> (= certoraMaskedTmp_9 (bvand certoraTmp_15 (_ bv115792089237316195423570985007226406215939081747436879206741300988257197096960 256))) (=> (= certoraMaskedTmp_10 (= certoraMaskedTmp_9 (_ bv0 256))) (=> certoraMaskedTmp_10 (=> (= certoraTmp_16 (= certoraTmp_15 e.msg.address_0)) (=> certoraTmp_16 (=> (= certoraTmp_17 origin_0) (=> (= certoraMaskedTmp_11 (bvand certoraTmp_17 (_ bv115792089237316195423570985007226406215939081747436879206741300988257197096960 256))) (=> (= certoraMaskedTmp_12 (= certoraMaskedTmp_11 (_ bv0 256))) (=> certoraMaskedTmp_12 (=> (= certoraTmp_18 (= certoraTmp_17 e.tx.origin_0)) (=> certoraTmp_18 (=> (= certoraTmp_19 blockNumber@1_0) (=> (= certoraTmp_20 (= certoraTmp_19 e.block.number_0)) (=> certoraTmp_20 (=> (= sizeCalldata_2 calldatasize@1_0) (=> (= tmpSizeCalldataLimitCheck_2 (bvugt sizeCalldata_2 (_ bv100 256))) (=> tmpSizeCalldataLimitCheck_2 (=> (= S_1 lastStorage_1) (=> (= certoraInput_1 (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (_ bv0 256) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv0 256)))) (_ bv452312848583266388373324160190187140051835877600158453279131187530910662656 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv1 256)))) (_ bv1766847064778384329583297500742918515827483896875618958121606201292619776 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv2 256)))) (_ bv6901746346790563787434755862277025452451108972170386555162524223799296 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv3 256)))) (_ bv26959946667150639794667015087019630673637144422540572481103610249216 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv4 256)))) (_ bv105312291668557186697918027683670432318895095400549111254310977536 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv5 256)))) (_ bv411376139330301510538742295639337626245683966408394965837152256 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv6 256)))) (_ bv1606938044258990275541962092341162602522202993782792835301376 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv7 256)))) (_ bv6277101735386680763835789423207666416102355444464034512896 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv8 256)))) (_ bv24519928653854221733733552434404946937899825954937634816 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv9 256)))) (_ bv95780971304118053647396689196894323976171195136475136 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv10 256)))) (_ bv374144419156711147060143317175368453031918731001856 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv11 256)))) (_ bv1461501637330902918203684832716283019655932542976 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv12 256)))) (_ bv5708990770823839524233143877797980545530986496 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv13 256)))) (_ bv22300745198530623141535718272648361505980416 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv14 256)))) (_ bv87112285931760246646623899502532662132736 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv15 256)))) (_ bv340282366920938463463374607431768211456 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv16 256)))) (_ bv1329227995784915872903807060280344576 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv17 256)))) (_ bv5192296858534827628530496329220096 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv18 256)))) (_ bv20282409603651670423947251286016 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv19 256)))) (_ bv79228162514264337593543950336 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv20 256)))) (_ bv309485009821345068724781056 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv21 256)))) (_ bv1208925819614629174706176 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv22 256)))) (_ bv4722366482869645213696 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv23 256)))) (_ bv18446744073709551616 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv24 256)))) (_ bv72057594037927936 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv25 256)))) (_ bv281474976710656 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv26 256)))) (_ bv1099511627776 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv27 256)))) (_ bv4294967296 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv28 256)))) (_ bv16777216 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv29 256)))) (_ bv65536 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv30 256)))) (_ bv256 256))) (bvmul ((_ zero_extend 248) (select calldata@1_0 (bvadd (_ bv0 256) (_ bv31 256)))) (_ bv1 256)))) (=> (= certoraInput_2 (bvudiv certoraInput_1 (_ bv26959946667150639794667015087019630673637144422540572481103610249216 256))) (=> (= certoraIsMethod_1 (= certoraInput_2 (_ bv404098525 256))) (=> certoraIsMethod_1 (=> (= thisAddressTmp_1 address@1_0) (=> (= thisAddressTmpBool_1 (= thisAddressTmp_1 (_ bv11259375 256))) (=> thisAddressTmpBool_1 (=> (= origS_1 lastStorage_1) (=> (= tmp@1_1 caller@1_0) (=> (= maskedTmp@1_1 (bvand tmp@1_1 (_ bv115792089237316195423570985007226406215939081747436879206741300988257197096960 256))) (=> (= maskedTmp@1_2 (= maskedTmp@1_1 (_ bv0 256))) (=> maskedTmp@1_2 (=> (= tmp@1_2 address@1_0) (=> (= maskedTmp@1_3 (bvand tmp@1_2 (_ bv115792089237316195423570985007226406215939081747436879206741300988257197096960 256))) (=> (= maskedTmp@1_4 (= maskedTmp@1_3 (_ bv0 256))) (=> maskedTmp@1_4 (=> (= M@1_1 (store M@1_0 (_ bv64 256) (_ bv128 256))) (=> (= L1023@1_2 callvalue@1_0) (=> (= L1022@1_1 (= L1023@1_2 (_ bv0 256))) (and (=> L1022@1_1 OK_1596_1023_0_0_1_0_0) (=> (not L1022@1_1) OK_1592_1023_0_0_1_0_0))))))))))))))))))))))))))))))))))))))))))))))))))) (= OK_1592_1023_0_0_1_0_0 (=> (= S_2 origS_1) (=> (= lastReverted_1 true) (=> (and true (and (and (and (and (and (and (and (and (and (and (= S_3 S_2) (= certoraOutVar0_3 certoraOutVar0_1)) (= M@1_3 M@1_1)) (= L1023@1_7 L1023@1_2)) (= (not (= L1022@1_6 (_ bv0 256))) L1022@1_1)) (= lastReverted_3 lastReverted_1)) (= L1020@1_2 L1020@1_0)) (= L1021@1_2 L1021@1_0)) (= L0@1_2 L0@1_0)) (= retVal@1_2 retVal@1_0)) (= certoraMemOffset_3 certoraMemOffset_0))) OK_2_0_0_0_0_0_0)))) (= OK_1596_1023_0_0_1_0_0 (=> (= L1020@1_1 (select (select S_1 address@1_0) (_ bv14 256))) (=> (= L1023@1_4 L1020@1_1) (=> (= M@1_2 (store M@1_1 (_ bv128 256) L1023@1_4)) (=> (= L1021@1_1 (_ bv160 256)) (=> (= L0@1_1 (_ bv32 256)) (=> (= L1022@1_5 (_ bv128 256)) (=> (= L1023@1_6 (_ bv32 256)) (=> (= retVal@1_1 (select M@1_2 (_ bv128 256))) (=> (= lastReverted_2 false) (=> (= certoraOutVar0_2 (select M@1_2 (_ bv128 256))) (=> (= certoraMemOffset_2 (_ bv160 256)) (=> (and true (and (and (and (and (and (and (and (and (and (and (= S_3 S_1) (= certoraOutVar0_3 certoraOutVar0_2)) (= M@1_3 M@1_2)) (= L1023@1_7 L1023@1_6)) (= L1022@1_6 L1022@1_5)) (= lastReverted_3 lastReverted_2)) (= L1020@1_2 L1020@1_1)) (= L1021@1_2 L1021@1_1)) (= L0@1_2 L0@1_1)) (= retVal@1_2 retVal@1_1)) (= certoraMemOffset_3 certoraMemOffset_2))) OK_2_0_0_0_0_0_0))))))))))))) (= OK_2_0_0_0_0_0_0 (=> (= myTotalSupply_1 certoraOutVar0_3) (=> (not lastReverted_3) (=> (not lastHasThrown_2) (=> (= lastStorage_2 S_3) (=> (= certoraAssumeL2_1 myTotalSupply_1) (=> (= certoraAssumeL3_1 myPrintIndex_0) (=> (= certoraArg0_1 digitalMediaId_0) OK_0_0_0_0_2_0_0)))))))) (= OK_0_0_0_0_2_0_0 (=> (= lastHasThrown_3 false) (=> (= certoraTmp_21 caller@2_0) (=> (= certoraMaskedTmp_13 (bvand certoraTmp_21 (_ bv115792089237316195423570985007226406215939081747436879206741300988257197096960 256))) (=> (= certoraMaskedTmp_14 (= certoraMaskedTmp_13 (_ bv0 256))) (=> certoraMaskedTmp_14 (=> (= certoraTmp_22 (= certoraTmp_21 e.msg.sender_0)) (=> certoraTmp_22 (=> (= certoraTmp_23 callvalue@2_0) (=> (= certoraTmp_24 (= certoraTmp_23 e.msg.value_0)) (=> certoraTmp_24 (=> (= certoraTmp_25 address@2_0) (=> (= certoraMaskedTmp_15 (bvand certoraTmp_25 (_ bv115792089237316195423570985007226406215939081747436879206741300988257197096960 256))) (=> (= certoraMaskedTmp_16 (= certoraMaskedTmp_15 (_ bv0 256))) (=> certoraMaskedTmp_16 (=> (= certoraTmp_26 (= certoraTmp_25 e.msg.address_0)) (=> certoraTmp_26 (=> (= certoraTmp_27 origin_0) (=> (= certoraMaskedTmp_17 (bvand certoraTmp_27 (_ bv115792089237316195423570985007226406215939081747436879206741300988257197096960 256))) (=> (= certoraMaskedTmp_18 (= certoraMaskedTmp_17 (_ bv0 256))) (=> certoraMaskedTmp_18 (=> (= certoraTmp_28 (= certoraTmp_27 e.tx.origin_0)) (=> certoraTmp_28 (=> (= certoraTmp_29 blockNumber@2_0) (=> (= certoraTmp_30 (= certoraTmp_29 e.block.number_0)) (=> certoraTmp_30 (=> (= sizeCalldata_3 calldatasize@2_0) (=> (= tmpSizeCalldataLimitCheck_3 (bvugt sizeCalldata_3 (_ bv100 256))) (=> tmpSizeCalldataLimitCheck_3 (=> (= S_4 lastStorage_2) (=> (= certoraInput_3 (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (_ bv0 256) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv0 256)))) (_ bv452312848583266388373324160190187140051835877600158453279131187530910662656 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv1 256)))) (_ bv1766847064778384329583297500742918515827483896875618958121606201292619776 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv2 256)))) (_ bv6901746346790563787434755862277025452451108972170386555162524223799296 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv3 256)))) (_ bv26959946667150639794667015087019630673637144422540572481103610249216 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv4 256)))) (_ bv105312291668557186697918027683670432318895095400549111254310977536 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv5 256)))) (_ bv411376139330301510538742295639337626245683966408394965837152256 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv6 256)))) (_ bv1606938044258990275541962092341162602522202993782792835301376 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv7 256)))) (_ bv6277101735386680763835789423207666416102355444464034512896 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv8 256)))) (_ bv24519928653854221733733552434404946937899825954937634816 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv9 256)))) (_ bv95780971304118053647396689196894323976171195136475136 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv10 256)))) (_ bv374144419156711147060143317175368453031918731001856 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv11 256)))) (_ bv1461501637330902918203684832716283019655932542976 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv12 256)))) (_ bv5708990770823839524233143877797980545530986496 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv13 256)))) (_ bv22300745198530623141535718272648361505980416 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv14 256)))) (_ bv87112285931760246646623899502532662132736 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv15 256)))) (_ bv340282366920938463463374607431768211456 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv16 256)))) (_ bv1329227995784915872903807060280344576 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv17 256)))) (_ bv5192296858534827628530496329220096 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv18 256)))) (_ bv20282409603651670423947251286016 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv19 256)))) (_ bv79228162514264337593543950336 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv20 256)))) (_ bv309485009821345068724781056 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv21 256)))) (_ bv1208925819614629174706176 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv22 256)))) (_ bv4722366482869645213696 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv23 256)))) (_ bv18446744073709551616 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv24 256)))) (_ bv72057594037927936 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv25 256)))) (_ bv281474976710656 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv26 256)))) (_ bv1099511627776 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv27 256)))) (_ bv4294967296 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv28 256)))) (_ bv16777216 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv29 256)))) (_ bv65536 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv30 256)))) (_ bv256 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv0 256) (_ bv31 256)))) (_ bv1 256)))) (=> (= certoraInput_4 (bvudiv certoraInput_3 (_ bv26959946667150639794667015087019630673637144422540572481103610249216 256))) (=> (= certoraIsMethod_2 (= certoraInput_4 (_ bv1440694901 256))) (=> certoraIsMethod_2 (=> (= certoraParam0_1 (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (_ bv0 256) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv0 256)))) (_ bv452312848583266388373324160190187140051835877600158453279131187530910662656 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv1 256)))) (_ bv1766847064778384329583297500742918515827483896875618958121606201292619776 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv2 256)))) (_ bv6901746346790563787434755862277025452451108972170386555162524223799296 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv3 256)))) (_ bv26959946667150639794667015087019630673637144422540572481103610249216 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv4 256)))) (_ bv105312291668557186697918027683670432318895095400549111254310977536 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv5 256)))) (_ bv411376139330301510538742295639337626245683966408394965837152256 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv6 256)))) (_ bv1606938044258990275541962092341162602522202993782792835301376 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv7 256)))) (_ bv6277101735386680763835789423207666416102355444464034512896 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv8 256)))) (_ bv24519928653854221733733552434404946937899825954937634816 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv9 256)))) (_ bv95780971304118053647396689196894323976171195136475136 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv10 256)))) (_ bv374144419156711147060143317175368453031918731001856 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv11 256)))) (_ bv1461501637330902918203684832716283019655932542976 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv12 256)))) (_ bv5708990770823839524233143877797980545530986496 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv13 256)))) (_ bv22300745198530623141535718272648361505980416 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv14 256)))) (_ bv87112285931760246646623899502532662132736 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv15 256)))) (_ bv340282366920938463463374607431768211456 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv16 256)))) (_ bv1329227995784915872903807060280344576 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv17 256)))) (_ bv5192296858534827628530496329220096 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv18 256)))) (_ bv20282409603651670423947251286016 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv19 256)))) (_ bv79228162514264337593543950336 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv20 256)))) (_ bv309485009821345068724781056 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv21 256)))) (_ bv1208925819614629174706176 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv22 256)))) (_ bv4722366482869645213696 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv23 256)))) (_ bv18446744073709551616 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv24 256)))) (_ bv72057594037927936 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv25 256)))) (_ bv281474976710656 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv26 256)))) (_ bv1099511627776 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv27 256)))) (_ bv4294967296 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv28 256)))) (_ bv16777216 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv29 256)))) (_ bv65536 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv30 256)))) (_ bv256 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv31 256)))) (_ bv1 256)))) (=> (= certoraEqParam_1 (= certoraParam0_1 certoraArg0_1)) (=> certoraEqParam_1 (=> (= thisAddressTmp_2 address@2_0) (=> (= thisAddressTmpBool_2 (= thisAddressTmp_2 (_ bv11259375 256))) (=> thisAddressTmpBool_2 (=> (= origS_2 lastStorage_2) (=> (= tmp@2_1 caller@2_0) (=> (= maskedTmp@2_1 (bvand tmp@2_1 (_ bv115792089237316195423570985007226406215939081747436879206741300988257197096960 256))) (=> (= maskedTmp@2_2 (= maskedTmp@2_1 (_ bv0 256))) (=> maskedTmp@2_2 (=> (= tmp@2_2 address@2_0) (=> (= maskedTmp@2_3 (bvand tmp@2_2 (_ bv115792089237316195423570985007226406215939081747436879206741300988257197096960 256))) (=> (= maskedTmp@2_4 (= maskedTmp@2_3 (_ bv0 256))) (=> maskedTmp@2_4 (=> (= M@2_1 (store M@2_0 (_ bv64 256) (_ bv128 256))) (=> (= L1023@2_2 callvalue@2_0) (=> (= L1022@2_1 (= L1023@2_2 (_ bv0 256))) (and (=> L1022@2_1 OK_2622_1023_0_0_2_0_0) (=> (not L1022@2_1) OK_2618_1023_0_0_2_0_0)))))))))))))))))))))))))))))))))))))))))))))))))))))) (= OK_2618_1023_0_0_2_0_0 (=> (= S_5 origS_2) (=> (= lastReverted_4 true) (=> (and true (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= lastHasThrown_6 lastHasThrown_3) (= S_6 S_5)) (= certoraOutVar0_6 certoraOutVar0_4)) (= lastReverted_6 lastReverted_4)) (= certoraMemOffset_10 certoraMemOffset_3)) (= certoraOutVar1_3 certoraOutVar1_1)) (= certoraOutVar2_3 certoraOutVar2_1)) (= certoraOutVar3_3 certoraOutVar3_1)) (= certoraOutVar4_3 certoraOutVar4_1)) (= M@2_16 M@2_1)) (= L1023@2_7 L1023@2_2)) (= (not (= L1022@2_7 (_ bv0 256))) L1022@2_1)) (= L1020@2_4 L1020@2_0)) (= L1021@2_5 L1021@2_0)) (= sizeCalldata@2_2 sizeCalldata@2_0)) (= tmpSizeCalldataLimitCheck@2_2 tmpSizeCalldataLimitCheck@2_0)) (= boundaryCalldata@2_2 boundaryCalldata@2_0)) (= L1019@2_4 L1019@2_0)) (= L1014@2_20 L1014@2_0)) (= L1015@2_10 L1015@2_0)) (= L1013@2_13 L1013@2_0)) (= L1018@2_3 L1018@2_0)) (= L1016@2_8 L1016@2_0)) (= L0@2_5 L0@2_0)) (= L1017@2_4 L1017@2_0)) (= L1012@2_7 L1012@2_0)) (= L1011@2_5 L1011@2_0)) (= L1010@2_5 L1010@2_0)) (= L1009@2_4 L1009@2_0)) (= L1008@2_7 L1008@2_0)) (= L1007@2_3 L1007@2_0)) (= t@2_3 t@2_0)) (= offsetFrom32_17 offsetFrom32_0)) (= offsetFrom32Completion_10 offsetFrom32Completion_0)) (= firstCell_17 firstCell_0)) (= secondCell_10 secondCell_0)) (= mload1_10 mload1_0)) (= mload2_10 mload2_0)) (= p2mload1_9 p2mload1_0)) (= p1mload2_9 p1mload2_0)) (= offsetFrom32Bits_3 offsetFrom32Bits_0)) (= maskOfSecond_5 maskOfSecond_0)) (= maskOfFirst_3 maskOfFirst_0)) (= p1mload1_3 p1mload1_0)) (= p2mload2_3 p2mload2_0)) (= p1rhs_3 p1rhs_0)) (= p2rhs_3 p2rhs_0)) (= mload1new_3 mload1new_0)) (= mload2new_3 mload2new_0)) (= p1mload1new_3 p1mload1new_0)) (= p2mload1new_3 p2mload1new_0)) (= p1mload2new_3 p1mload2new_0)) (= p2mload2new_3 p2mload2new_0)) (= assume1_3 assume1_0)) (= assume2_3 assume2_0)) (= assume3_3 assume3_0)) (= assume4_3 assume4_0)) (= retVal@2_2 retVal@2_0))) OK_12_0_0_0_0_0_0)))) (= OK_2622_1023_0_0_2_0_0 (=> (= sizeCalldata@2_1 calldatasize@2_0) (=> (= tmpSizeCalldataLimitCheck@2_1 (bvult sizeCalldata@2_1 (_ bv1000 256))) (=> tmpSizeCalldataLimitCheck@2_1 (=> (= boundaryCalldata@2_1 (bvult (_ bv4 256) sizeCalldata@2_1)) (=> boundaryCalldata@2_1 (=> (= L1019@2_1 (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (bvxor (_ bv0 256) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv0 256)))) (_ bv452312848583266388373324160190187140051835877600158453279131187530910662656 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv1 256)))) (_ bv1766847064778384329583297500742918515827483896875618958121606201292619776 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv2 256)))) (_ bv6901746346790563787434755862277025452451108972170386555162524223799296 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv3 256)))) (_ bv26959946667150639794667015087019630673637144422540572481103610249216 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv4 256)))) (_ bv105312291668557186697918027683670432318895095400549111254310977536 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv5 256)))) (_ bv411376139330301510538742295639337626245683966408394965837152256 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv6 256)))) (_ bv1606938044258990275541962092341162602522202993782792835301376 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv7 256)))) (_ bv6277101735386680763835789423207666416102355444464034512896 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv8 256)))) (_ bv24519928653854221733733552434404946937899825954937634816 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv9 256)))) (_ bv95780971304118053647396689196894323976171195136475136 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv10 256)))) (_ bv374144419156711147060143317175368453031918731001856 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv11 256)))) (_ bv1461501637330902918203684832716283019655932542976 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv12 256)))) (_ bv5708990770823839524233143877797980545530986496 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv13 256)))) (_ bv22300745198530623141535718272648361505980416 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv14 256)))) (_ bv87112285931760246646623899502532662132736 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv15 256)))) (_ bv340282366920938463463374607431768211456 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv16 256)))) (_ bv1329227995784915872903807060280344576 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv17 256)))) (_ bv5192296858534827628530496329220096 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv18 256)))) (_ bv20282409603651670423947251286016 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv19 256)))) (_ bv79228162514264337593543950336 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv20 256)))) (_ bv309485009821345068724781056 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv21 256)))) (_ bv1208925819614629174706176 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv22 256)))) (_ bv4722366482869645213696 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv23 256)))) (_ bv18446744073709551616 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv24 256)))) (_ bv72057594037927936 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv25 256)))) (_ bv281474976710656 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv26 256)))) (_ bv1099511627776 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv27 256)))) (_ bv4294967296 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv28 256)))) (_ bv16777216 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv29 256)))) (_ bv65536 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv30 256)))) (_ bv256 256))) (bvmul ((_ zero_extend 248) (select calldata@2_0 (bvadd (_ bv4 256) (_ bv31 256)))) (_ bv1 256)))) (=> (= L1022@2_2 L1019@2_1) (=> (= M@2_2 (store M@2_1 (_ bv0 256) L1022@2_2)) (=> (= M@2_3 (store M@2_2 (_ bv32 256) (_ bv18 256))) (=> (= L1015@2_1 L1014@2_1) (=> (= L1021@2_3 L1022@2_2) (=> (= L1014@2_2 (bvadd (_ bv0 256) L1014@2_1)) (=> (= L1013@2_1 L1014@2_2) (=> (= L1013@2_2 (select (select S_4 address@2_0) L1013@2_1)) (=> (= L1014@2_3 (bvudiv L1013@2_2 (_ bv1 256))) (=> (= L1014@2_4 (bvand (_ bv4294967295 256) L1014@2_3)) (=> (= L1014@2_5 (bvand (_ bv4294967295 256) L1014@2_4)) (=> (= L1020@2_2 L1014@2_5) (=> (= L1014@2_6 (bvadd (_ bv0 256) L1015@2_1)) (=> (= L1013@2_3 L1014@2_6) (=> (= L1013@2_4 (select (select S_4 address@2_0) L1013@2_3)) (=> (= L1014@2_7 (bvudiv L1013@2_4 (_ bv4294967296 256))) (=> (= L1014@2_8 (bvand (_ bv4294967295 256) L1014@2_7)) (=> (= L1014@2_9 (bvand (_ bv4294967295 256) L1014@2_8)) (=> (= L1019@2_2 L1014@2_9) (=> (= L1014@2_10 (bvadd (_ bv1 256) L1015@2_1)) (=> (= L1014@2_11 (select (select S_4 address@2_0) L1014@2_10)) (=> (= L1018@2_1 L1014@2_11) (=> (= L1014@2_12 (bvadd (_ bv2 256) L1015@2_1)) (=> (= L1013@2_5 L1014@2_12) (=> (= L1013@2_6 (select (select S_4 address@2_0) L1013@2_5)) (=> (= L1014@2_13 (bvudiv L1013@2_6 (_ bv1 256))) (=> (= L1014@2_14 (bvand (_ bv1461501637330902918203684832716283019655932542975 256) L1014@2_13)) (=> (= L1016@2_1 L1018@2_1) (=> (= L1018@2_2 (_ bv96 256)) (=> (= L0@2_1 L1016@2_1) (=> (= L1016@2_2 L1020@2_2) (=> (= L1020@2_3 L0@2_1) (=> (= L1022@2_3 L1016@2_2) (=> (= L1017@2_1 L1019@2_2) (=> (= L1019@2_3 L1014@2_14) (=> (= L0@2_2 L1017@2_1) (=> (= L1017@2_2 L1021@2_3) (=> (= L1021@2_4 L0@2_2) (=> (= L1023@2_4 L1017@2_2) (=> (= L1017@2_3 (_ bv128 256)) (=> (= M@2_4 (store M@2_3 (_ bv128 256) L1023@2_4)) (=> (= M@2_5 (store M@2_4 (_ bv160 256) L1022@2_3)) (=> (= M@2_6 (store M@2_5 (_ bv192 256) L1021@2_4)) (=> (= M@2_7 (store M@2_6 (_ bv224 256) L1020@2_3)) (=> (= L1015@2_2 L1019@2_3) (=> (= L1015@2_3 (bvand (_ bv1461501637330902918203684832716283019655932542975 256) L1015@2_2)) (=> (= L1015@2_4 (bvand (_ bv1461501637330902918203684832716283019655932542975 256) L1015@2_3)) (=> (= M@2_8 (store M@2_7 (_ bv256 256) L1015@2_4)) (=> (= L1016@2_7 (_ bv288 256)) (=> (= M@2_9 (store M@2_8 (_ bv288 256) (_ bv192 256))) (=> (= L1012@2_1 (select M@2_9 (_ bv96 256))) (=> (= M@2_10 (store M@2_9 (_ bv320 256) L1012@2_1)) (=> (= L1013@2_8 (select M@2_10 (_ bv96 256))) (=> (= L1012@2_2 L1013@2_8) (=> (= L1011@2_1 (_ bv352 256)) (=> (= L1010@2_1 (_ bv128 256)) (=> (= L1009@2_1 (_ bv0 256)) (=> (= L1008@2_1 (bvult (_ bv0 256) L1012@2_2)) (=> (= L1008@2_2 (not L1008@2_1)) (and (=> (and L1008@2_2 (and (and (and (and (and (= lastHasThrown_5 lastHasThrown_3) (= M@2_12 M@2_10)) (= L1009@2_3 L1009@2_1)) (= L1008@2_6 L1008@2_2)) (= L1007@2_2 L1007@2_0)) (= t@2_2 t@2_0))) OK_2791_1009_0_0_2_0_0) (=> (not L1008@2_2) OK_2773_1009_0_10_2_0_0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (= OK_2773_1009_0_10_2_0_0 (=> (= L1008@2_3 (select M@2_10 (_ bv128 256))) (=> (= L1007@2_1 (_ bv352 256)) (=> (= M@2_11 (store M@2_10 (_ bv352 256) L1008@2_3)) (=> (= L1009@2_2 (_ bv32 256)) (=> (= L1008@2_4 (bvult (_ bv32 256) L1012@2_2)) (=> (= L1008@2_5 (not L1008@2_4)) (=> (= t@2_1 (not L1008@2_5)) (=> (= lastHasThrown_4 t@2_1) (and L1008@2_5 (=> (and true (and (and (and (and (and (= lastHasThrown_5 lastHasThrown_4) (= M@2_12 M@2_11)) (= L1009@2_3 L1009@2_2)) (= L1008@2_6 L1008@2_5)) (= L1007@2_2 L1007@2_1)) (= t@2_2 t@2_1))) OK_2791_1009_0_0_2_0_0))))))))))) (= OK_2791_1009_0_0_2_0_0 (=> (= L1014@2_17 (bvadd L1013@2_8 (_ bv352 256))) (=> (= L0@2_3 L1014@2_17) (=> (= L1014@2_18 L1013@2_8) (=> (= L1015@2_7 L0@2_3) (=> (= L1014@2_19 (bvand (_ bv31 256) L1014@2_18)) (=> (= L1013@2_9 (= L1014@2_19 (_ bv0 256))) (and (=> (and L1013@2_9 (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= M@2_15 M@2_12) (= L1015@2_9 L1015@2_7)) (= (not (= L1013@2_12 (_ bv0 256))) L1013@2_9)) (= L1012@2_6 L1012@2_2)) (= L1011@2_4 L1011@2_1)) (= L1010@2_4 L1010@2_1)) (= offsetFrom32_4 offsetFrom32_0)) (= offsetFrom32Completion_3 offsetFrom32Completion_0)) (= firstCell_4 firstCell_0)) (= secondCell_3 secondCell_0)) (= mload1_3 mload1_0)) (= mload2_3 mload2_0)) (= p2mload1_2 p2mload1_0)) (= p1mload2_2 p1mload2_0)) (= offsetFrom32Bits_2 offsetFrom32Bits_0)) (= maskOfSecond_4 maskOfSecond_0)) (= maskOfFirst_2 maskOfFirst_0)) (= p1mload1_2 p1mload1_0)) (= p2mload2_2 p2mload2_0)) (= p1rhs_2 p1rhs_0)) (= p2rhs_2 p2rhs_0)) (= mload1new_2 mload1new_0)) (= mload2new_2 mload2new_0)) (= p1mload1new_2 p1mload1new_0)) (= p2mload1new_2 p2mload1new_0)) (= p1mload2new_2 p1mload2new_0)) (= p2mload2new_2 p2mload2new_0)) (= assume1_2 assume1_0)) (= assume2_2 assume2_0)) (= assume3_2 assume3_0)) (= assume4_2 assume4_0))) OK_2836_1014_0_0_2_0_0) (=> (not L1013@2_9) OK_2811_1014_0_0_2_0_0))))))))) (= OK_2811_1014_0_0_2_0_0 (=> (= L1013@2_10 (bvsub L1015@2_7 L1014@2_19)) (=> (= L1012@2_3 L1013@2_10) (=> (= offsetFrom32_1 (bvurem L1012@2_3 (_ bv32 256))) (=> (= offsetFrom32_2 (bvmul offsetFrom32_1 (_ bv8 256))) (=> (= offsetFrom32Completion_1 (bvsub (_ bv256 256) offsetFrom32_2)) (=> (= firstCell_1 (bvudiv L1012@2_3 (_ bv32 256))) (=> (= firstCell_2 (bvmul firstCell_1 (_ bv32 256))) (=> (= secondCell_1 (bvadd firstCell_2 (_ bv32 256))) (=> (= mload1_1 (select M@2_12 firstCell_2)) (=> (= mload2_1 (select M@2_12 secondCell_1)) (=> (= p2mload1_1 (bvshl mload1_1 offsetFrom32_2)) (=> (= p1mload2_1 (bvlshr mload2_1 offsetFrom32Completion_1)) (=> (= L1012@2_4 (bvor p2mload1_1 p1mload2_1)) (=> (= L1011@2_2 (bvsub L1010@2_3 (_ bv1 256))) (=> (= L1011@2_3 (bvnot L1011@2_2)) (=> (= L1012@2_5 (bvand L1011@2_3 L1012@2_4)) (=> (= offsetFrom32_3 (bvurem L1013@2_10 (_ bv32 256))) (=> (= offsetFrom32Bits_1 (bvmul offsetFrom32_3 (_ bv8 256))) (=> (= offsetFrom32Completion_2 (bvsub (_ bv256 256) offsetFrom32Bits_1)) (=> (= firstCell_3 (bvsub L1013@2_10 offsetFrom32_3)) (=> (= secondCell_2 (bvadd firstCell_3 (_ bv32 256))) (=> (= mload1_2 (select M@2_12 firstCell_3)) (=> (= mload2_2 (select M@2_12 secondCell_2)) (=> (= maskOfSecond_1 offsetFrom32Completion_2) (=> (= maskOfSecond_2 (bvshl (_ bv1 256) maskOfSecond_1)) (=> (= maskOfSecond_3 (bvsub maskOfSecond_2 (_ bv1 256))) (=> (= maskOfFirst_1 (bvnot maskOfSecond_3)) (=> (= p1mload1_1 (bvand mload1_2 maskOfFirst_1)) (=> (= p2mload2_1 (bvand mload2_2 maskOfSecond_3)) (=> (= p1rhs_1 (bvlshr L1012@2_5 offsetFrom32Bits_1)) (=> (= p2rhs_1 (bvshl L1012@2_5 offsetFrom32Completion_2)) (=> (= p1mload1new_1 (bvand mload1new_1 maskOfFirst_1)) (=> (= p2mload1new_1 (bvand mload1new_1 maskOfSecond_3)) (=> (= p1mload2new_1 (bvand mload2new_1 maskOfFirst_1)) (=> (= p2mload2new_1 (bvand mload2new_1 maskOfSecond_3)) (=> (= assume1_1 (= p1mload1new_1 p1mload1_1)) (=> (= assume2_1 (= p2mload1new_1 p1rhs_1)) (=> (= assume3_1 (= p1mload2new_1 p2rhs_1)) (=> (= assume4_1 (= p2mload2new_1 p2mload2_1)) (=> assume1_1 (=> assume2_1 (=> assume3_1 (=> assume4_1 (=> (= M@2_13 (store M@2_12 firstCell_3 mload1new_1)) (=> (= M@2_14 (store M@2_13 secondCell_2 mload2new_1)) (=> (= L1013@2_11 (bvadd (_ bv32 256) L1013@2_10)) (=> (= L1015@2_8 L1013@2_11) (=> (and true (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= M@2_15 M@2_14) (= L1015@2_9 L1015@2_8)) (= L1013@2_12 L1013@2_11)) (= L1012@2_6 L1012@2_5)) (= L1011@2_4 L1011@2_3)) (= L1010@2_4 L1010@2_3)) (= offsetFrom32_4 offsetFrom32_3)) (= offsetFrom32Completion_3 offsetFrom32Completion_2)) (= firstCell_4 firstCell_3)) (= secondCell_3 secondCell_2)) (= mload1_3 mload1_2)) (= mload2_3 mload2_2)) (= p2mload1_2 p2mload1_1)) (= p1mload2_2 p1mload2_1)) (= offsetFrom32Bits_2 offsetFrom32Bits_1)) (= maskOfSecond_4 maskOfSecond_3)) (= maskOfFirst_2 maskOfFirst_1)) (= p1mload1_2 p1mload1_1)) (= p2mload2_2 p2mload2_1)) (= p1rhs_2 p1rhs_1)) (= p2rhs_2 p2rhs_1)) (= mload1new_2 mload1new_1)) (= mload2new_2 mload2new_1)) (= p1mload1new_2 p1mload1new_1)) (= p2mload1new_2 p2mload1new_1)) (= p1mload2new_2 p1mload2new_1)) (= p2mload2new_2 p2mload2new_1)) (= assume1_2 assume1_1)) (= assume2_2 assume2_1)) (= assume3_2 assume3_1)) (= assume4_2 assume4_1))) OK_2836_1014_0_0_2_0_0))))))))))))))))))))))))))))))))))))))))))))))))) (= OK_2836_1014_0_0_2_0_0 (=> (= L1022@2_4 (select M@2_15 (_ bv64 256))) (=> (= L1023@2_5 L1022@2_4) (=> (= L1022@2_5 (bvsub L1015@2_9 L1022@2_4)) (=> (= L0@2_4 L1022@2_5) (=> (= L1022@2_6 L1023@2_5) (=> (= L1023@2_6 L0@2_4) (=> (= offsetFrom32_5 (bvurem L1022@2_6 (_ bv32 256))) (=> (= offsetFrom32_6 (bvmul offsetFrom32_5 (_ bv8 256))) (=> (= offsetFrom32Completion_4 (bvsub (_ bv256 256) offsetFrom32_6)) (=> (= firstCell_5 (bvudiv L1022@2_6 (_ bv32 256))) (=> (= firstCell_6 (bvmul firstCell_5 (_ bv32 256))) (=> (= secondCell_4 (bvadd firstCell_6 (_ bv32 256))) (=> (= mload1_4 (select M@2_15 firstCell_6)) (=> (= mload2_4 (select M@2_15 secondCell_4)) (=> (= p2mload1_3 (bvshl mload1_4 offsetFrom32_6)) (=> (= p1mload2_3 (bvlshr mload2_4 offsetFrom32Completion_4)) (=> (= retVal@2_1 (bvor p2mload1_3 p1mload2_3)) (=> (= lastReverted_5 false) (=> (= certoraMemOffset_4 L1022@2_6) (=> (= offsetFrom32_7 (bvurem certoraMemOffset_4 (_ bv32 256))) (=> (= offsetFrom32_8 (bvmul offsetFrom32_7 (_ bv8 256))) (=> (= offsetFrom32Completion_5 (bvsub (_ bv256 256) offsetFrom32_8)) (=> (= firstCell_7 (bvudiv certoraMemOffset_4 (_ bv32 256))) (=> (= firstCell_8 (bvmul firstCell_7 (_ bv32 256))) (=> (= secondCell_5 (bvadd firstCell_8 (_ bv32 256))) (=> (= mload1_5 (select M@2_15 firstCell_8)) (=> (= mload2_5 (select M@2_15 secondCell_5)) (=> (= p2mload1_4 (bvshl mload1_5 offsetFrom32_8)) (=> (= p1mload2_4 (bvlshr mload2_5 offsetFrom32Completion_5)) (=> (= certoraOutVar0_5 (bvor p2mload1_4 p1mload2_4)) (=> (= certoraMemOffset_5 (bvadd L1022@2_6 (_ bv32 256))) (=> (= offsetFrom32_9 (bvurem certoraMemOffset_5 (_ bv32 256))) (=> (= offsetFrom32_10 (bvmul offsetFrom32_9 (_ bv8 256))) (=> (= offsetFrom32Completion_6 (bvsub (_ bv256 256) offsetFrom32_10)) (=> (= firstCell_9 (bvudiv certoraMemOffset_5 (_ bv32 256))) (=> (= firstCell_10 (bvmul firstCell_9 (_ bv32 256))) (=> (= secondCell_6 (bvadd firstCell_10 (_ bv32 256))) (=> (= mload1_6 (select M@2_15 firstCell_10)) (=> (= mload2_6 (select M@2_15 secondCell_6)) (=> (= p2mload1_5 (bvshl mload1_6 offsetFrom32_10)) (=> (= p1mload2_5 (bvlshr mload2_6 offsetFrom32Completion_6)) (=> (= certoraOutVar1_2 (bvor p2mload1_5 p1mload2_5)) (=> (= certoraMemOffset_6 (bvadd certoraMemOffset_5 (_ bv32 256))) (=> (= offsetFrom32_11 (bvurem certoraMemOffset_6 (_ bv32 256))) (=> (= offsetFrom32_12 (bvmul offsetFrom32_11 (_ bv8 256))) (=> (= offsetFrom32Completion_7 (bvsub (_ bv256 256) offsetFrom32_12)) (=> (= firstCell_11 (bvudiv certoraMemOffset_6 (_ bv32 256))) (=> (= firstCell_12 (bvmul firstCell_11 (_ bv32 256))) (=> (= secondCell_7 (bvadd firstCell_12 (_ bv32 256))) (=> (= mload1_7 (select M@2_15 firstCell_12)) (=> (= mload2_7 (select M@2_15 secondCell_7)) (=> (= p2mload1_6 (bvshl mload1_7 offsetFrom32_12)) (=> (= p1mload2_6 (bvlshr mload2_7 offsetFrom32Completion_7)) (=> (= certoraOutVar2_2 (bvor p2mload1_6 p1mload2_6)) (=> (= certoraMemOffset_7 (bvadd certoraMemOffset_6 (_ bv32 256))) (=> (= offsetFrom32_13 (bvurem certoraMemOffset_7 (_ bv32 256))) (=> (= offsetFrom32_14 (bvmul offsetFrom32_13 (_ bv8 256))) (=> (= offsetFrom32Completion_8 (bvsub (_ bv256 256) offsetFrom32_14)) (=> (= firstCell_13 (bvudiv certoraMemOffset_7 (_ bv32 256))) (=> (= firstCell_14 (bvmul firstCell_13 (_ bv32 256))) (=> (= secondCell_8 (bvadd firstCell_14 (_ bv32 256))) (=> (= mload1_8 (select M@2_15 firstCell_14)) (=> (= mload2_8 (select M@2_15 secondCell_8)) (=> (= p2mload1_7 (bvshl mload1_8 offsetFrom32_14)) (=> (= p1mload2_7 (bvlshr mload2_8 offsetFrom32Completion_8)) (=> (= certoraOutVar3_2 (bvor p2mload1_7 p1mload2_7)) (=> (= certoraMemOffset_8 (bvadd certoraMemOffset_7 (_ bv32 256))) (=> (= offsetFrom32_15 (bvurem certoraMemOffset_8 (_ bv32 256))) (=> (= offsetFrom32_16 (bvmul offsetFrom32_15 (_ bv8 256))) (=> (= offsetFrom32Completion_9 (bvsub (_ bv256 256) offsetFrom32_16)) (=> (= firstCell_15 (bvudiv certoraMemOffset_8 (_ bv32 256))) (=> (= firstCell_16 (bvmul firstCell_15 (_ bv32 256))) (=> (= secondCell_9 (bvadd firstCell_16 (_ bv32 256))) (=> (= mload1_9 (select M@2_15 firstCell_16)) (=> (= mload2_9 (select M@2_15 secondCell_9)) (=> (= p2mload1_8 (bvshl mload1_9 offsetFrom32_16)) (=> (= p1mload2_8 (bvlshr mload2_9 offsetFrom32Completion_9)) (=> (= certoraOutVar4_2 (bvor p2mload1_8 p1mload2_8)) (=> (= certoraMemOffset_9 (bvadd certoraMemOffset_8 (_ bv32 256))) (=> (and true (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= lastHasThrown_6 lastHasThrown_5) (= S_6 S_4)) (= certoraOutVar0_6 certoraOutVar0_5)) (= lastReverted_6 lastReverted_5)) (= certoraMemOffset_10 certoraMemOffset_9)) (= certoraOutVar1_3 certoraOutVar1_2)) (= certoraOutVar2_3 certoraOutVar2_2)) (= certoraOutVar3_3 certoraOutVar3_2)) (= certoraOutVar4_3 certoraOutVar4_2)) (= M@2_16 M@2_15)) (= L1023@2_7 L1023@2_6)) (= L1022@2_7 L1022@2_6)) (= L1020@2_4 L1020@2_3)) (= L1021@2_5 L1021@2_4)) (= sizeCalldata@2_2 sizeCalldata@2_1)) (= tmpSizeCalldataLimitCheck@2_2 tmpSizeCalldataLimitCheck@2_1)) (= boundaryCalldata@2_2 boundaryCalldata@2_1)) (= L1019@2_4 L1019@2_3)) (= L1014@2_20 L1014@2_19)) (= L1015@2_10 L1015@2_9)) (= L1013@2_13 L1013@2_12)) (= L1018@2_3 L1018@2_2)) (= L1016@2_8 L1016@2_7)) (= L0@2_5 L0@2_4)) (= L1017@2_4 L1017@2_3)) (= L1012@2_7 L1012@2_6)) (= L1011@2_5 L1011@2_4)) (= L1010@2_5 L1010@2_4)) (= L1009@2_4 L1009@2_3)) (= L1008@2_7 L1008@2_6)) (= L1007@2_3 L1007@2_2)) (= t@2_3 t@2_2)) (= offsetFrom32_17 offsetFrom32_16)) (= offsetFrom32Completion_10 offsetFrom32Completion_9)) (= firstCell_17 firstCell_16)) (= secondCell_10 secondCell_9)) (= mload1_10 mload1_9)) (= mload2_10 mload2_9)) (= p2mload1_9 p2mload1_8)) (= p1mload2_9 p1mload2_8)) (= offsetFrom32Bits_3 offsetFrom32Bits_2)) (= maskOfSecond_5 maskOfSecond_4)) (= maskOfFirst_3 maskOfFirst_2)) (= p1mload1_3 p1mload1_2)) (= p2mload2_3 p2mload2_2)) (= p1rhs_3 p1rhs_2)) (= p2rhs_3 p2rhs_2)) (= mload1new_3 mload1new_2)) (= mload2new_3 mload2new_2)) (= p1mload1new_3 p1mload1new_2)) (= p2mload1new_3 p2mload1new_2)) (= p1mload2new_3 p1mload2new_2)) (= p2mload2new_3 p2mload2new_2)) (= assume1_3 assume1_2)) (= assume2_3 assume2_2)) (= assume3_3 assume3_2)) (= assume4_3 assume4_2)) (= retVal@2_2 retVal@2_1))) OK_12_0_0_0_0_0_0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (= OK_12_0_0_0_0_0_0 (=> (= certoraAssumeR1_1 certoraOutVar0_6) (=> (= certoraAssumeR2_1 certoraOutVar1_3) (=> (= certoraAssumeR3_1 certoraOutVar2_3) (=> (= certoraAssumeR4_1 certoraOutVar3_3) (=> (= certoraAssumeR5_1 certoraOutVar4_3) (=> (= certoraAssumeR6_1 certoraOutVar5_1) (=> (not lastReverted_6) (=> (not lastHasThrown_6) (=> (= certoraAssume1_1 (= certoraAssumeL1_0 certoraAssumeR1_1)) (=> (= certoraAssume2_1 (= certoraAssumeL2_1 certoraAssumeR2_1)) (=> (= certoraAssume3_1 (= certoraAssumeL3_1 certoraAssumeR3_1)) (=> (= certoraAssume4_1 (= certoraAssumeL4_0 certoraAssumeR4_1)) (=> (= certoraAssume5_1 (= certoraAssumeL5_0 certoraAssumeR5_1)) (=> (= certoraAssume6_1 (= certoraAssumeL6_0 certoraAssumeR6_1)) (=> (= certoraAssume_1 (and certoraAssume1_1 certoraAssume2_1 certoraAssume3_1 certoraAssume4_1 certoraAssume5_1 certoraAssume6_1)) (=> certoraAssume_1 (=> (= certora_certoraAssert_0t1_1 myPrintIndex_0) (=> (= certora_certoraAssert_0t2_1 myTotalSupply_1) (=> (= certoraTStrict_1 (bvult certora_certoraAssert_0t1_1 certora_certoraAssert_0t2_1)) (=> (= certoraTEq_1 (= certora_certoraAssert_0t1_1 certora_certoraAssert_0t2_1)) (=> (= certoraAssert_0_1 (or certoraTStrict_1 certoraTEq_1)) (and certoraAssert_0_1 true)))))))))))))))))))))))) OK_0_0_0_0_0_0_0)))
(check-sat)
(get-model)
